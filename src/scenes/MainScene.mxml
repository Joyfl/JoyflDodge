<?xml version="1.0" encoding="utf-8"?>
<joyflic:Scene xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:joyflic="kr.joyfl.joyflic.*"
			   xmlns:components="components.*">	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.adobe.serialization.json.JSONDecoder;
			import com.facebook.graph.Facebook;
			
			import components.NoFriendSelectedAlert;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			import objects.User;
			
			import skins.NoWayButtonSkin;
			
			private const GET_APP_USERS_URL : String = "https://api.facebook.com/method/friends.getAppUsers";
			
			private var _friendsLoader : URLLoader = new URLLoader;
			private var _friends : Array;
			private var _currentUserIndex : int = -1;
			private var _numFriends : int;
			
			[Bindable]
			public var friends : ArrayList;
			
			override public function onCreate( data : Object = null ) : void
			{
				_friendsLoader.addEventListener( Event.COMPLETE, onFriendsLoadComplete );
			}
			
			override public function onResume() : void
			{
				trace( "Resume" );
//				friends.removeAll();
//				friends = null;
			}
			
			private function onSingleModeButtonClick( e : MouseEvent ) : void
			{
				pushGameScene( GameMode.SINGLE );
			}
			
			private function onChallengeModeButtonClick( e : MouseEvent ) : void
			{
				currentState = "friends";
				
				// 로드된 목록이 없을 경우 친구들 중 Joyfl Dodge 앱을 사용하는 친구 목록 로드
				if( !friends )
				{
					trace( "friends가", null, "입니다 고갱님" );
					friends = new ArrayList;
					_friendsLoader.load( new URLRequest( GET_APP_USERS_URL + "?format=json&access_token=" + Facebook.getSession().accessToken  ) );
					startBusy();
				}
			}
			
			/**
			 * 친구들 중 Joyfl Dodge 앱을 사용하는 친구 목록 로드가 완료될 때 실행되는 메서드.
			 */
			private function onFriendsLoadComplete( e : Event ) : void
			{
				_friends = ( new JSONDecoder( e.target.data ) ).getValue() as Array;
				_numFriends = _friends.length;
				loadFriendInfo();
			}
			
			private function loadFriendInfo() : void
			{
				Facebook.api( "/" + String( _friends[++_currentUserIndex] ), onGetFriend );
			}
			
			private function onGetFriend( result : Object, fail : Object ) : void
			{
				if( fail ) return;
				trace( "getFriend" );
				var friend : User = new User;
				friend.id = result.id;
				friend.name = result.name;
				friend.loadPicture( "http://graph.facebook.com/" + friend.id + "/picture", onUserLoadComplete );
				
				if( _currentUserIndex + 1 < _numFriends )
					loadFriendInfo();
			}
			
			private function onUserLoadComplete( friend : User ) : void
			{
//				trace( friends );
				if( !friends ) return;
				friends.addItem( friend );
				stopBusy();
			}
			
			private function onChallengeButtonClick( e : MouseEvent ) : void
			{
				if( friendsList.selectedIndex == -1 )
				{
					 var alert : Panel = PopUpManager.createPopUp( this, NoFriendSelectedAlert, true ) as Panel;
					 alert.x = ( this.width - alert.width ) >> 1;
					 alert.y = ( this.height - alert.height ) >> 1;
					return;
				}
				
				pushGameScene( GameMode.CHALLENGE, friends.getItemAt( friendsList.selectedIndex ) as User );
			}
			
			private function onCancelButtonClick( e : MouseEvent ) : void
			{
				currentState = "normal";
			}
			
			private function pushGameScene( gameMode : String, rival : User = null ) : void
			{
				currentState = "normal";
				var gameScene : GameScene = new GameScene;
				sceneStack.pushScene( gameScene, {gameMode : gameMode, rival : rival} );
			}
		]]>
	</fx:Script>
	
	<joyflic:states>
		<s:State name="normal" />
		<s:State name="friends" />
	</joyflic:states>
	
	<s:BitmapImage source="@Embed( source='/../assets/main.png' )" width="100%" height="100%" />
	
	<s:Button left="130" top="280" width="120" height="60" click="onSingleModeButtonClick( event )" alpha="0" buttonMode="true" />
	<s:Button left="295" top="280" width="160" height="60" click="onChallengeModeButtonClick( event )" alpha="0" buttonMode="true" />
	
	<s:HGroup includeIn="friends" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Panel width="400" height="300" skinClass="skins.JoyflDodgePanelSkin">
			<s:layout>
				<s:VerticalLayout horizontalAlign="center" paddingTop="5" />
			</s:layout>
			
			<s:BitmapImage source="@Embed( source='/../assets/challenge_msg.png' )" />
			
			<components:FriendList id="friendsList" width="100%" height="100%" dataProvider="{friends}" 
								   contentBackgroundAlpha="0" borderVisible="false" />
			
			<s:HGroup width="100%" horizontalAlign="center" gap="-1">
				<s:Button label="도전하기" click="onChallengeButtonClick( event )" skinClass="skins.ChallengeButtonSkin" />
				<s:Button label="취소" click="onCancelButtonClick( event )" skinClass="skins.MainButtonSkin" />
			</s:HGroup>
		</s:Panel>
	</s:HGroup>
</joyflic:Scene>
